{"version":3,"sources":["components/header/header.js","components/header/index.js","services/gotservice.js","components/spinner/spinner.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/rowBlock/rowBlock.js","components/itemList/itemList.js","components/itemList/index.js","components/itemDetails/itemDetails.js","components/pages/characterPage/characterPage.js","components/pages/housesPage/housesPage.js","components/pages/booksPage/booksPage.js","components/pages/booksPageItem/booksPageItem.js","components/app/app.js","components/app/index.js","index.js"],"names":["HeaderBlock","styled","div","HeaderTitle","h3","HeaderLinks","ul","Header","to","gotService","getAllCharacters","a","getResource","char","map","_transformCharacter","getCharacter","id","getAllHouses","house","_transformHouse","getHouse","getAllBooks","book","_transformBook","getBook","name","gender","born","died","culture","url","match","region","words","overlord","ancestralWeapons","numberOfPages","publisher","released","this","baseApi","fetch","res","ok","Error","status","json","Spinner","className","Img","img","ErrorMessage","src","process","alt","RandomBlock","H4","h4","Term","span","RandomChar","state","loading","error","onCharLoad","setState","updateChar","Math","round","random","then","catch","onError","console","timerId","setInterval","props","interval","clearInterval","content","Component","defaultProps","View","RowBlock","left","right","Row","Col","md","li","withData","ItemList","data","onItemSelected","renderItem","item","label","key","onClick","getData","serverData","BlockItemDetails","Field","field","ItemDetails","onItemLoad","updateItem","selectedItem","prevProps","log","React","Children","toArray","children","child","cloneElement","CharacterPage","selectedChar","itemDetails","itemList","HousesPage","selectedHouse","BooksPage","lg","size","offset","bookId","history","push","withRouter","BooksPageItem","AppBlock","App","visibleRandomChar","onToggleRandomChar","randomContent","Button","path","exact","component","MainPage","render","params","urlId","Title","checkExistUrl","FlexBlock","Links","h1","H2","h2","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.30965377.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <Link to = '/'>\n                Game of Thrones DB\n                </Link>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <Link to = '/characters/'>Characters</Link>\n                </li>\n                <li>\n                    <Link to = '/houses/'>Houses</Link>\n                </li>\n                <li>\n                    <Link to = '/books/'>Books</Link>   \n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;","import Header from './header';\n\nexport default Header;","\r\nexport default class gotService {\r\n    constructor() {\r\n        this.baseApi = \"https://www.anapioficeandfire.com/api\"\r\n    }\r\n   async getResource(url) {\r\n        const res = await fetch(`${this.baseApi}${url}`)\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch : ${this.baseApi}${url}, received ${res.status}`)\r\n        }\r\n\r\n        return res.json()\r\n    }\r\n    getAllCharacters = async () => {\r\n        const char = await this.getResource(`/characters?page=5&pageSize=10`)\r\n        return  char.map(this._transformCharacter)\r\n    }\r\n    getCharacter = async (id) => {\r\n        const char = await this.getResource(`/characters/${id}`)\r\n        return this._transformCharacter(char)\r\n    }\r\n    getAllHouses = async () => {\r\n        const house = await this.getResource(`/houses?page=5&pageSize=10`)\r\n        return  house.map(this._transformHouse)\r\n    }\r\n    getHouse = async (id) => {\r\n        const house = await this.getResource(`/houses/${id}`)\r\n        return this._transformHouse(house)\r\n    }\r\n    getAllBooks = async () => {\r\n        const book = await this.getResource(`/books?page=0&pageSize=10`)\r\n        return  book.map(this._transformBook)\r\n\r\n    }\r\n    getBook = async (id) => {\r\n        const book = await this.getResource(`/books/${id}`)\r\n        return this._transformBook(book)\r\n    }\r\n    _transformCharacter = (char) => {\r\n        const {name, gender, born, died, culture, url} = char\r\n        return {name: name||'Not said',\r\n                gender: gender||'Not said',\r\n                born: born||'Not said',\r\n                died: died||'Not said',\r\n                culture: culture||'Not said',\r\n                id: +url.match(/(?<=\\/)\\d*$/)\r\n                }\r\n    }\r\n\r\n    _transformHouse = (house) => {\r\n        const {name, region, words, overlord, ancestralWeapons, url} = house\r\n        return {name: name||'Not said',\r\n                region: region||'Not said',\r\n                words: words||'Not said',\r\n                overlord: overlord||'Not said',\r\n                ancestralWeapons: ancestralWeapons||'Not said',\r\n                id: +url.match(/(?<=\\/)\\d*$/)\r\n                }\r\n    }\r\n    _transformBook = (book) => {\r\n        const {name, numberOfPages, publisher, released, url} = book\r\n        return {name: name||'Not said',\r\n                numberOfPages: numberOfPages||'Not said',\r\n                publisher: publisher||'Not said',\r\n                released: released||'Not said',\r\n                id: url.match(/(?<=\\/)\\d*$/)[0]\r\n                }\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './spinner.css'\r\n\r\nexport default function Spinner() {\r\n\r\n    return (\r\n    <div className=\"loadingio-spinner-pulse-xzurliw6ad\">\r\n        <div className=\"ldio-rwkcudhalk\"><div></div><div></div><div></div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nconst Img = styled.img`\r\n width:100%;\r\n`\r\nexport default function ErrorMessage() {\r\n    return (\r\n        <>\r\n            <Img src={process.env.PUBLIC_URL + '/img/error.jpg'} alt=\"error\"/>\r\n            <span>Something went wrong</span>\r\n        </>\r\n    )\r\n}","import React, {Component} from 'react';\nimport gotService from '../../services/gotservice'\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage'\n// import './randomChar.css';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\n\nconst RandomBlock = styled.div`\n    background-color: #fff;\n    padding: 25px 25px 15px 25px;\n    margin-bottom: 40px;\n`\nconst H4 = styled.h4`\n    margin-bottom: 20px;\n    text-align: center;\n`\nconst Term = styled.span`\n    font-weight: bold;\n`\n\n\nexport default class RandomChar extends Component {\n\n    gotService = new gotService()\n    state = {\n        char:{},\n        loading: true,\n        error: false,\n    }\n\n    static defaultProps = {\n        interval: 5000\n    }\n    static propTypes = {\n        interval: PropTypes.number\n    }\n\n    componentDidMount() {\n        this.updateChar();\n      this.timerId =  setInterval(this.updateChar, this.props.interval)\n\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerId)\n    }\n\n    onCharLoad=(char)=>{\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    updateChar=()=>{\n        const id = Math.round(Math.random()*140 +25);\n        this.gotService\n        .getCharacter(id)\n        .then(this.onCharLoad)\n        .catch(this.onError)\n    }\n    onError = (error)=> {\n        console.error(error)\n        this.setState({\n            error: true\n        })\n    }\n    render() {\n        const {char, loading, error} = this.state\n        const content = error? <ErrorMessage/> :\n         loading? <Spinner/>:\n          <View char={char}/>;\n        return (\n            <RandomBlock className=\"random-block rounded\">\n                {content}\n            </RandomBlock>\n        );\n    }\n}\n\nconst View = ({char})=>{\n    const {name= 'Not said', gender = 'Not said', born= 'Not said', died= 'Not said', culture= 'Not said'} = char\n    return (\n        <>\n            <H4>Random Character: {name}</H4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <Term className=\"term\">Gender </Term>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <Term className=\"term\">Born </Term>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <Term className=\"term\">Died </Term>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <Term className=\"term\">Culture </Term>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n        </>\n    )\n};","import RandomChar from './randomChar';\n\nexport default RandomChar;","import React from 'react';\r\nimport {Col, Row} from 'reactstrap';\r\n\r\n\r\n const RowBlock = ({left, right}) => {\r\n    return (\r\n        <Row>\r\n            <Col md='6'>\r\n                {left}\r\n            </Col>\r\n            <Col md='6'>\r\n                {right}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default RowBlock;","import React, {useState, useEffect, Component} from 'react';\n// import nextId from \"react-id-generator\";\nimport Spinner from '../spinner/spinner';\nimport styled from 'styled-components';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport PropTypes from 'prop-types';\n\n\n\n\n\n\n\n\nconst Li = styled.li`\ncursor: pointer;\n`\nfunction ItemList({data, onItemSelected, renderItem}) {\n\n\n\n\n     const  renderItems = (arr) => {\n        return arr.map(item => {\n            const label = renderItem(item)\n            return ( \n                <li key={item.id} onClick={()=>onItemSelected(item.id)} className=\"list-group-item\">\n                {label}\n            </li>\n            )\n        })\n    }\n\n\n\n        \n        return (\n            <ul className=\"item-list list-group\">\n                {renderItems(data)}\n            </ul>\n        );\n\n}\n\nfunction withData(View) {\n\n    class Container extends Component{\n\n        state= {\n            data:[],\n            error: false\n        }\n        componentDidMount(){\n            const {getData} = this.props;\n\n            getData()\n                .then(serverData => {\n                    this.setState({data:serverData})\n                                        \n                })\n                .catch(this.onError)\n        }\n\n\n        onError  (error) {\n            console.error(error)\n            this.setState({error: true})\n        }\n\n\n        render(){\n            const {error, data} = this.state\n            if (error) {\n                return <ErrorMessage/>\n            } \n            if(!data) {\n                return <Spinner/>\n            }\n            return <View {...this.props} data ={data} />\n        }\n\n        \n\n    }\n    Container.propTypes= {\n        getData: PropTypes.func,\n        onItemSelected: PropTypes.func\n    }\n    return Container;\n}\n\nexport default withData(ItemList)","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport gotService from '../../services/gotservice'\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage'\n\n// import './charDetails.css';\nimport styled from 'styled-components';\n\nconst H4 = styled.h4`\n    margin-bottom: 20px;\n    text-align: center;\n`\nconst BlockItemDetails = styled.div`\n    background-color: #fff;\n    padding: 25px 25px 15px 25px;\n    margin-bottom: 40px;\n`\nconst Term = styled.span`\n    font-weight: bold;\n`\n\n\n\n\n\n\n\nconst Field =  function ({item, field, label}) {\n    return (\n    <li className=\"list-group-item d-flex justify-content-between\">\n        <Term className=\"term\">{label}</Term>\n        <span>{item[field]}</span>\n    </li>\n                    )\n}\n\nexport {Field}\n\n\nexport default class ItemDetails extends Component {\n\n    state = {\n        item:{},\n        loading: true,\n        error: false,\n    }\n\n    componentDidMount() {\n        this.updateItem();\n\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.selectedItem !== prevProps.selectedItem) {\n            this.updateItem();\n        }\n\n    }\n\n    componentDidCatch() {\n        console.log('error');\n        this.setState({\n            error: true\n        })\n    }\n\n\n   \n\n    onItemLoad=(item)=>{\n        this.setState({\n            item,\n            loading: false,\n            error: false,\n        })\n    }\n    updateItem=()=>{\n        this.setState({\n            loading: true\n        });\n        const {getData} = this.props\n        getData(this.props.selectedItem)\n        .then(this.onItemLoad)\n        .catch(this.onError)\n    }\n    onError = (error)=> {\n        console.error(error)\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        } \n        const {item:{name}, item,  loading} = this.state\n\n        if(loading) {\n            return <Spinner/>\n        }\n        console.log(React.Children.toArray(this.props.children)) \n\n        return (\n            <BlockItemDetails className=\"char-details rounded\">\n                <H4>{name}</H4>\n                <ul className=\"list-group list-group-flush\">\n                    {\n                        React.Children.map(this.props.children, (child)=> {\n                            return React.cloneElement(child, {item})\n                        })\n                    }\n                </ul>\n            </BlockItemDetails>\n        );\n    }\n}","import React, { Component } from 'react';\r\nimport RowBlock from '../../rowBlock/rowBlock';\r\nimport ItemList from '../../itemList';\r\nimport ItemDetails, {Field} from '../../itemDetails/itemDetails';\r\nimport ErrorMessage from '../../errorMessage/errorMessage'\r\nimport gotService from '../../../services/gotservice';\r\n\r\n\r\n\r\n\r\nexport default class CharacterPage extends Component {\r\n\r\n    state = {\r\n        selectedChar: 27,\r\n        error: false\r\n    }\r\n\r\n\r\n    gotService = new gotService()\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n    componentDidCatch() {\r\n        console.log('error');\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return (\r\n                <RowBlock left ={<ErrorMessage/>}/>\r\n                    \r\n\r\n            ) \r\n        }\r\n\r\n\r\n        const itemDetails = (\r\n            <ItemDetails \r\n            getData={this.gotService.getCharacter} \r\n            selectedItem= {this.state.selectedChar} >\r\n                <Field field=\"gender\" label=\"Gender\" />\r\n                <Field field=\"born\" label=\"Born\" />\r\n                <Field field=\"died\" label=\"Died\" />\r\n                <Field field=\"culture\" label=\"Culture\" />\r\n            </ItemDetails>\r\n        )\r\n\r\n        const itemList = (\r\n            <ItemList getData={this.gotService.getAllCharacters} \r\n                      onItemSelected= {this.onItemSelected}\r\n                      renderItem = {({name, gender}) => `${name} (${gender})`}\r\n                         />\r\n        )\r\n\r\n\r\n        return (\r\n            <RowBlock left= {itemList} right = {itemDetails}/>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport RowBlock from '../../rowBlock/rowBlock';\r\nimport ItemList from '../../itemList';\r\nimport ItemDetails, {Field} from '../../itemDetails/itemDetails';\r\nimport ErrorMessage from '../../errorMessage/errorMessage'\r\nimport gotService from '../../../services/gotservice';\r\n\r\n\r\n\r\n\r\nexport default class HousesPage extends Component {\r\n\r\n    state = {\r\n        selectedHouse: 27,\r\n        error: false\r\n    }\r\n\r\n\r\n    gotService = new gotService()\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedHouse: id\r\n        })\r\n    }\r\n    componentDidCatch() {\r\n        console.log('error');\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return (\r\n                <RowBlock left ={<ErrorMessage/>}/>\r\n                    \r\n\r\n            ) \r\n        }\r\n\r\n\r\n        const itemDetails = (\r\n            <ItemDetails \r\n            getData={this.gotService.getHouse} \r\n            selectedItem= {this.state.selectedHouse} >\r\n                <Field field=\"region\" label=\"Region\" />\r\n                <Field field=\"words\" label=\"Words\" />\r\n                {/* <Field field=\"ancestralWeapons\" label=\"Ancestral Weapons\" /> */}\r\n\r\n            </ItemDetails>\r\n        )\r\n\r\n        const itemList = (\r\n            <ItemList getData={this.gotService.getAllHouses} \r\n                        onItemSelected= {this.onItemSelected}\r\n                        renderItem = {({name}) => name}\r\n                         />\r\n        )\r\n\r\n\r\n        return (\r\n            <RowBlock left= {itemList} right = {itemDetails}/>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Col, Row} from 'reactstrap';\r\nimport RowBlock from '../../rowBlock/rowBlock';\r\nimport ItemList from '../../itemList';\r\nimport ErrorMessage from '../../errorMessage/errorMessage'\r\nimport gotService from '../../../services/gotservice';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nclass BooksPage extends Component {\r\n\r\n    state = {\r\n\r\n        error: false\r\n    }\r\n\r\n\r\n    gotService = new gotService()\r\n\r\n\r\n    componentDidCatch() {\r\n        console.log('error');\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return (\r\n                <RowBlock left ={<ErrorMessage/>}/>\r\n                    \r\n\r\n            ) \r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Row>\r\n                            <Col lg={{size: 4, offset: 4}}>\r\n                                <ItemList\r\n                                    getData={this.gotService.getAllBooks} \r\n                                    onItemSelected= {(bookId)=> {\r\n                                        console.log(bookId)\r\n                                        this.props.history.push(bookId)\r\n                                    }}\r\n                                    renderItem = {({name}) => name}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(BooksPage);","import React, { Component } from 'react';\r\nimport {Col, Row} from 'reactstrap';\r\nimport RowBlock from '../../rowBlock/rowBlock';\r\nimport ItemDetails, {Field} from '../../itemDetails/itemDetails';\r\nimport ErrorMessage from '../../errorMessage/errorMessage'\r\nimport gotService from '../../../services/gotservice';\r\n\r\n\r\n\r\n\r\nexport default class BooksPageItem extends Component {\r\n\r\n\r\n    state = {\r\n        error : false\r\n    }\r\n\r\n    gotService = new gotService()\r\n\r\n    componentDidCatch() {\r\n        console.log('error');\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return (\r\n                <RowBlock left ={<ErrorMessage/>}/>\r\n                    \r\n\r\n            ) \r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <Row>\r\n                            <Col lg={{size: 6, offset: 3}}>\r\n                                <ItemDetails \r\n                                    getData={this.gotService.getBook} \r\n                                    selectedItem= {this.props.bookId} >\r\n                                        <Field field=\"numberOfPages\" label=\"Number Of Pages\" />\r\n                                        <Field field=\"publisher\" label=\"Publisher\" />\r\n                                        <Field field=\"released\" label=\"Released\" />\r\n                                    </ItemDetails>\r\n                            </Col>\r\n                        </Row>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport {Col, Row, Container, Button} from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport CharacterPage from '../pages/characterPage/characterPage';\nimport HousesPage from '../pages/housesPage/housesPage';\nimport BooksPage from '../pages/booksPage/booksPage';\nimport BooksPageItem from '../pages/booksPageItem/booksPageItem';\n\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport styled from 'styled-components';\n\nconst AppBlock = styled.div`\n\tbox-sizing: border-box;\n\tmargin: 0;\n\tpadding: 0;\n    outline: none;\n    overflow-x: hidden;\n    background: url(${process.env.PUBLIC_URL+'/img/got.jpeg'}) center center no-repeat;\n    background-size: cover;\n    font-size: 16px;\n    height: 100vh;\t\n    min-height:100vh;\n`\n\n\n\nexport default class App extends Component{\n\n    state= {\n        visibleRandomChar: true,\n        error: false\n    }\n\n    onToggleRandomChar = ()=>{\n        this.setState(({visibleRandomChar})=> {\n            return {\n                visibleRandomChar: !visibleRandomChar\n            }\n        })\n    }\n    \n    componentDidCatch() {\n        console.log('error');\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n\n        if (this.state.error) {\n            return <ErrorMessage/>\n        } \n\n        const {visibleRandomChar} = this.state\n        const randomContent = visibleRandomChar? <RandomChar interval = {5000}/>: null;\n        return (\n            <Router>\n                <AppBlock> \n                    <Container>\n                        <Header />\n                    </Container>\n                    <Container>\n                        <Row>\n                            <Col lg={{size: 5, offset: 0}}>\n                                {randomContent}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col lg={{size: 3, offset: 1}}>\n                                <Button onClick={this.onToggleRandomChar}  className='mb-5'>Toggle random character</Button>\n                            </Col>\n                        </Row>\n                        <Route path='/' exact component={MainPage}/>\n                        <Route path='/characters' component={CharacterPage}/>\n                        <Route path='/houses' component={HousesPage}/>\n                        <Route path='/books' exact component={BooksPage}/>\n                        <Route path='/books/:id' render={({match:{params:{id}}}) => {\n                            return <BooksPageItem bookId = {id}/>\n                        }}/>\n                        <Route path='/:id' render={({match:{params:{id}}}) => {\n                            return checkExistUrl(id)\n                        }}/>\n                    </Container>\n                </AppBlock>\n            </Router>\n            \n        );\n    }\n    \n};\n\nconst FlexBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 80px;\n    margin-bottom: 40px;\n`;\n\nconst Links = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\nconst Title = styled.h1`\n    display: block;\n    text-align: center;\n    color: #fff;\n    font-size: 36px;\n`;\nconst H2 = styled.h2`\n    display: block;\n    text-align: center;\n    color: #fff;\n    font-size: 24px;\n    font-weight: normal ;\n`;\nconst MainPage = function() {\n    return (\n            <>\n            <Title>Database of the Game of Thrones universe </Title>\n            <H2> Select the section you are interested in</H2>\n            <FlexBlock>\n                <Links>\n                <li>\n                    <Link to = '/characters/'>Characters</Link>\n                </li>\n                <li>\n                    <Link to = '/houses/'>Houses</Link>\n                </li>\n                <li>\n                    <Link to = '/books/'>Books</Link>   \n                </li>\n                </Links>\n            </FlexBlock>\n            </>\n            \n            \n\n    )\n}\nfunction checkExistUrl (urlId) {\nswitch (urlId) {\n    case 'books':\n        return null;\n    case 'characters':\n        return null;\n    case 'houses':\n        return null;\n    default:\n        return (<>\n            <Title>The page does not exist</Title>\n            <Button className='d-block m-auto'>\n                <Link to='/'>To start page</Link>\n                \n            </Button>\n        </>);\n}\n}\n\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport './services/gotservice'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}